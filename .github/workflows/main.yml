name: CI

on:
  push:
    branches:
      - master
      - ci
      - github-actions
    paths-ignore:
      - guide/**
  pull_request:
    branches:
      - master
    paths-ignore:
      - guide/**

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-10.15
          - ubuntu-18.04
        emacs_version:
          - '25.3'
          - '26.3'
          - '27.1'
        include:
          - os: windows-2016
          - os: windows-2019
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Rust
        run: |
          rustup install stable
          rustc -Vv
          cargo -V

      - name: Set up LLVM
        if: runner.os == 'Windows'
        run: |
          choco install llvm --version 8.0.0
          echo "LIBCLANG_PATH=$env:SystemDrive\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Kill syspolicyd
        if: runner.os == 'macOS'
        run: sudo pkill syspolicyd

      - uses: actions/checkout@v2

      - name: Build
        if: runner.os != 'Windows'
        run: ./bin/build
      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: .\bin\build.ps1

      - name: Find syspolicyd
        if: runner.os == 'macOS'
        run: bash -c 'ps aux | grep syspolicy'

      # XXX: Please don't use homebrew!
      - name: Install Emacs's pre-requisites (macOS)
        if: runner.os == 'macOS'
        run: |
          set -e
          brew install pkg-config gnutls libxml2
          # https://github.com/remacs/remacs/issues/155 (pkg-config)
          brew outdated pkg-config || brew upgrade pkg-config
          # https://github.com/remacs/remacs/issues/886 (libxml2, macOS 10.14)
          echo PKG_CONFIG_PATH=/usr/local/opt/libxml2/lib/pkgconfig >> $GITHUB_ENV
      - name: Install Emacs's pre-requisites (Linux)
        if: runner.os == 'Linux'
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install ruby libgtk-3-dev libxpm-dev
          sudo apt-get install libgnutls-dev || echo 'Skipped libgnutls-dev'
          sudo apt-get install libgnutls28-dev || echo 'Skipped libgnutls28-dev' # XXX: Ubuntu 18.04

      - name: Find syspolicydd
        if: runner.os == 'macOS'
        run: bash -c 'ps aux | grep syspolicy'

      - name: Install Emacs ${{ matrix.emacs_version }}
        if: runner.os != 'Windows'
        run: |
          set -e
          export PATH="$HOME/.evm/bin:$PATH"
          echo "$HOME/.evm/bin" >> $GITHUB_PATH
          git clone -b master https://github.com/ubolonton/evm.git $HOME/.evm
          evm config path /tmp
          evm install emacs-${{ matrix.emacs_version }} --use --skip
      - name: Install Emacs (Windows)
        if: runner.os == 'Windows'
        run: |
          $env:MSYS_PATH = "$env:CD\ci-tools\msys2"
          choco install msys2 --params="/InstallDir:$env:MSYS_PATH /NoPath"
          $env:PATH = "$env:MSYS_PATH\usr\bin;" + $env:PATH
          pacman -S --noconfirm --needed mingw-w64-x86_64-emacs
          echo "$env:MSYS_PATH\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf-8 -Append

      - name: Run tests
        # if: runner.os != 'macOS'
        run: |
          cargo test --all
          ./bin/test

      # - name: Setup tmate session
      #   if: runner.os == 'macOS'
      #   uses: mxschmitt/action-tmate@v3
      #   # with:
      #   #   limit-access-to-actor: true
